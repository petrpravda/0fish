name: Rust

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

env:
  CARGO_TERM_COLOR: always

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3
    - name: Build
      run: |
        rustup target add x86_64-unknown-linux-musl
        cargo build --release --target x86_64-unknown-linux-musl --manifest-path engine/Cargo.toml --release
    - name: Create release artifact
      run: |
        ls -al engine/target/x86_64-unknown-linux-musl/release
        cp engine/target/x86_64-unknown-linux-musl/release/zerofish zerofish_x86_64-linux
      env:
        CARGO_TARGET_DIR: engine/target/release
    - name: Upload artifacts
      uses: actions/upload-artifact@v2
      with:
        name: zerofish-linux
        path: zerofish_x86_64-linux
    - name: Create release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ github.ref }}
        release_name: Release ${{ github.ref }}
        draft: false
        prerelease: false
        file_pattern: release/*      
